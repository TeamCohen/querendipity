//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.01.27 at 01:36:27 PM EST 
//


package nies.ui.vocabulary;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the nies.ui.vocabulary package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Selector_QNAME = new QName("", "selectorPath");
    private final static QName _Configuration_QNAME = new QName("", "configuration");
    private final static QName _Filter_QNAME = new QName("", "filterString");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: nies.ui.vocabulary
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Configuration }
     * 
     */
    public Configuration createConfiguration() {
        return new Configuration();
    }

    /**
     * Create an instance of {@link LabelDescription }
     * 
     */
    public LabelDescription createLabelDescription() {
        return new LabelDescription();
    }

    /**
     * Create an instance of {@link AttributeAssertion }
     * 
     */
    public AttributeAssertion createAttributeAssertion() {
        return new AttributeAssertion();
    }

    /**
     * Create an instance of {@link Attribute }
     * 
     */
    public Attribute createAttribute() {
        return new Attribute();
    }

    /**
     * Create an instance of {@link AttributesList }
     * 
     */
    public AttributesList createAttributesList() {
        return new AttributesList();
    }

    /**
     * Create an instance of {@link TabListings }
     * 
     */
    public TabListings createTabListings() {
        return new TabListings();
    }

    /**
     * Create an instance of {@link TypeDescription }
     * 
     */
    public TypeDescription createTypeDescription() {
        return new TypeDescription();
    }

    /**
     * Create an instance of {@link AssertAttributesList }
     * 
     */
    public AssertAttributesList createAssertAttributesList() {
        return new AssertAttributesList();
    }

    /**
     * Create an instance of {@link TabListing }
     * 
     */
    public TabListing createTabListing() {
        return new TabListing();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "selectorPath")
    public JAXBElement<String> createSelector(String value) {
        return new JAXBElement<String>(_Selector_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Configuration }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "configuration")
    public JAXBElement<Configuration> createConfiguration(Configuration value) {
        return new JAXBElement<Configuration>(_Configuration_QNAME, Configuration.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "filterString")
    public JAXBElement<String> createFilter(String value) {
        return new JAXBElement<String>(_Filter_QNAME, String.class, null, value);
    }

}
